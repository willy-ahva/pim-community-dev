#!/usr/bin/env php
<?php

if ($argc <= 2) {
    die("Usage: behat-list path tags\n");
}

// Init the Composer autoloader
require realpath(dirname(__FILE__)) . '/../vendor/autoload.php';

$keywords = new \Behat\Gherkin\Keywords\CachedArrayKeywords(__DIR__ . '/../vendor/behat/gherkin/i18n.php');
$lexer    = new \Behat\Gherkin\Lexer($keywords);
$dumper   = new \Behat\Gherkin\Dumper\GherkinDumper($keywords);
$parser   = new \Behat\Gherkin\Parser($lexer);
$gherkin  = new \Behat\Gherkin\Gherkin();
$gherkin->setFreeze(false);
$gherkin->addLoader(new \Behat\Gherkin\Loader\DirectoryLoader($gherkin));
$gherkin->addLoader(new \Behat\Gherkin\Loader\GherkinFileLoader($parser));
$gherkin->addFilter(new \Behat\Gherkin\Filter\TagFilter($argv[2]));

$maxPerBatch = 10;
$scenarioCount = 0;
$tags = [];
$resource = __DIR__ . '/../' . $argv[1];

if (!file_exists($resource)) {
    exit(0);
}

$features = $gherkin->load($resource);
/** @var \Behat\Gherkin\Node\FeatureNode $feature */
foreach ($features as $feature) {
    $filePath = $feature->getFile();
    $fileContent = file_get_contents($filePath);
    /** @var \Behat\Gherkin\Node\ScenarioNode $scenario */
    foreach ($feature->getScenarios() as $scenario) {
        $tag = 'batch-' . floor($scenarioCount / $maxPerBatch);
        if (!in_array($tag, $tags)) {
            $tags[] = $tag;
        }

        $fileContent = replaceTags($dumper, $scenario, $tag, $fileContent);

        $scenarioCount++;
    }

    file_put_contents($filePath, $fileContent);
}

function replaceTags (
    \Behat\Gherkin\Dumper\GherkinDumper $dumper,
    \Behat\Gherkin\Node\ScenarioNode $scenario,
    $tag,
    $fileContent
) {
    $title = sprintf('Scenario: %s', $scenario->getTitle());

    $patternOutline = sprintf('/Scenario Outline: %s$/m', $scenario->getTitle());
    $isOutline = preg_match($patternOutline, $fileContent);
    if (1 === $isOutline) {
        $title = sprintf('Scenario Outline: %s', $scenario->getTitle());
    }

    $removeOldTagPattern = sprintf('/@.*\n\s+%s$/m', $title);

    $fileContent = preg_replace($removeOldTagPattern, $title, $fileContent);

    $scenario->addTag($tag);
    $newTags = $dumper->dumpTags($scenario->getTags());

    $addTagsPattern = sprintf('/%s$/m', $title);
    $finalTags = $newTags . PHP_EOL . '  ' . $title;
    $fileContent = preg_replace($addTagsPattern, $finalTags, $fileContent);

    return $fileContent;
}

echo join(PHP_EOL, $tags) . PHP_EOL;
